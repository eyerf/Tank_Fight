1:对游戏的窗口进行初始化，设置标题，大小，坐标，窗口的事件的监听

2:游戏菜单的显示，以及游戏菜单的按键的控制
游戏被分成了若干个游戏的状态：gameState
游戏菜单
游戏帮助
游戏关于
游戏中
游戏结束
在不同的状态下，绘制不同的内容，按键有不同的处理的方式

3:调整整个游戏窗口的重绘制的机制。
FPS: frame per second
要每秒固定的刷新我们的整个窗口。fps = 33帧
每隔30ms刷新一次（对整个窗口进行重绘）。repaint();
单独启用一个线程用于窗口的重绘。 

4:坦克的类的定义，和绘制

5:坦克的四方向的行走，以及边界的控制。

6：坦克发射子弹

7:坦克的绘制使用图片

8:解决屏幕闪烁的问题 双缓冲解决

9:子弹的效率问题
解决方法:使用对象池来解决：提前创建好若干个子弹对象，放到一个容器中。
需要的时候从对象池中拿一个出来使用，当子弹需要被销毁的时候，放回到原来的对象池中。

10:敌人坦克的控制
随机的在屏幕的左上角和右上角产生敌人的坦克
让敌人具有一定程度的AI
坦克相关的类调整：父类:Tank 子类:MyTank、EnemyTank

11:敌人坦克的ＡＩ
每隔５秒让敌人坦克随机获得一个状态（站立、行走）
敌人发射子弹的ＡＩ：游戏的每一帧都随机（０．０５概率）判断敌人是否发射子弹

12:添加爆炸类，爆炸效果的控制

13:使用对象池来管理爆炸对象

14:给坦克添加血条和名字

15:敌人的坦克使用对象池管理

16:自己的坦克死亡的处理，切换游戏状态，游戏结束。
提供两个选项：回到主菜单 退出游戏(重置游戏数据，开始新游戏)

17:地图 地图元素类
设计:上、左、右距离窗口的宽度为1.5倍的坦克宽度。

18:实现一张地图的绘制

19:优化了地图随机初始化。子弹和地图的碰撞。

20:坦克和地图的碰撞

21:敌人坦克和地图的碰撞

22:玩家的老巢,老巢被击毁，延迟若干秒，游戏结束

23:控制玩家的发射炮弹的速度（最小间隔半秒）

24:添加其他种类的地图元素
不可击毁的地图元素
遮挡物

25:添加不同的地图的种类

26:添加关卡
关卡的设计：
1.敌人坦克的数量
2.地图元素块的不同的摆放的方式
3.敌人的坦克的类型的不同（随着关卡的增加，难度增大）
4.使用简单的文本来实现关卡的设计（每一关对应一个文本）

28:程序解析关卡信息

29:根据关卡信息，实现当前关卡的结束
根据关卡敌人的类型去创建敌人
关卡难度

30:添加游戏信息类，获得了所有的关卡的数量。游戏的通关的判断

31:添加游戏的背景音乐与音效

32:过关判断,通关的处理

33:过关的百叶窗的效果

34: 游戏帮助，游戏关于，保存游戏（只保存玩到了第几关,继续游戏可以选择已经通关的关卡,还要展示没有通关的关卡，没有通关的关卡不能选择）

